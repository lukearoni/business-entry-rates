---
title: "New Businesses in Different Areas"
subtitle: "Comparing Establishment Entry Rates in Different Metropolitan Areas"
execute:
    echo: false
    message: false
    warning: false
---

```{r}
library(tidyverse)       # Load things
library(tidycensus)
library(janitor)
```

```{r}
bds2022 <- read_csv("bds2022_msa.csv") %>%  # Making tibble from dataset, metropolitan area business dynamics dataset
  clean_names() %>%
  filter(year == 2022) %>%
  select(         # Select columns of data to use
    msa,
    estabs_entry,        
    estabs_exit,  
    estabs_entry_rate,  # startup rate
    estabs_exit_rate,   # business exit rate
    firms, estabs, emp
  ) %>%
  drop_na()
```

```{r}
# Load crosswalk file
# Load dataset with metropolitan area names matching to codes
msa_names <- read_csv("list1_2020.csv") %>%
  clean_names() %>%
  transmute(
    cbsa_code = as.character(cbsa_code),
    msa_name = cbsa_title
  )

# Clean your BDS data and convert code to character
bds2022 <- bds2022 %>%
  mutate(msa = as.character(msa)) %>%
  left_join(msa_names, by = c("msa" = "cbsa_code")) %>%
  select(msa_name, everything())
```

```{r}
#| eval: false
#| echo: false
bds2022 |>
  distinct() |> 
ggplot(aes(x = estabs_entry_rate, y = estabs_exit_rate, label = msa_name)) +
  geom_point(color = "#1f78b4", alpha = 0.7, size = 3) +
  ggrepel::geom_text_repel(data = subset(bds2022, estabs_entry_rate > 20)) +
  labs(
    title = "Do Metro Areas With More Startups See Lower Exit Rates?",
    subtitle = "BDS 2022: Establishment Entry vs. Exit Rates by MSA",
    x = "Startup Rate (Establishment Entries per 100 Existing)",
    y = "Exit Rate (Establishment Exits per 100 Existing)",
    caption = "Source: U.S. Census Bureau BDS 2022"
  ) +
  theme_minimal()
```

```{r, fig.width=16, fig.height=8}
# Home page plot
bds2022 |>
  distinct() |> 
  slice_max(order_by = estabs_entry_rate, n = 20) |> # Order by highest rates
  mutate(rank = row_number()) |> # labeling ranks (did not label by area name because of debugging difficulties; it resulted in incorrect bar lengths)
  ggplot(aes(x = factor(rank, levels = rev(1:20)), y = estabs_entry_rate)) +
  coord_flip() + 
  geom_col(fill = "#1f78b4") +
  geom_text(aes(label = paste0(msa_name, ": ", round(estabs_entry_rate, 1))), # Labeling area names after the bars as a way to work around the bug
          vjust = 0.5, hjust = -0.1, size = 4) +
scale_y_continuous(limits = c(0, 28)) +
labs(
    title = "Top 20 Metro Areas by Establishment Entry Rate (2022)",
    subtitle = "Share of new establishments out of total existing establishments",
    x = "Rank",
    y = "Entry Rate (%)",
    caption = "Source: U.S. Census Bureau BDS 2022"
  ) +
  theme_minimal() + 
  theme(
    plot.title = element_text(size = 24, face = "bold"),
    plot.subtitle = element_text(size = 20),
    axis.title = element_text(size = 20),
    plot.caption = element_text(size = 20)
  )
```

Establishment entry rates vary amongst different metropolitan areas. We obtained a dataset containing business dynamics data from the US Census Bureau, including the 2022 establishment entry and exit rates for each metropolitan area. This records the number of new shops, startups, or franchise buildings divided by the total number of establishments in that area during 2022. We seek to use this data to find the metropolitan areas with the highest rate. Sheridan, Wyoming is a high outlier for establishment entry rates, with an over 6% increase from the second highest, while the rest of the top 20 metropolitan area entry rates don't differ by more than 2.2%.

## Explaining Sheridan, WY

```{r}
# Load total population data (B01003)
pop_raw <- read_csv("cbsa-est2024-alldata-char.csv")

# Clean and select relevant columns
library(readr)
library(dplyr)

# Define the mapping of AGEGRP codes to age ranges
age_group_map <- c(
  "1" = "0-4",
  "2" = "5-9",
  "3" = "10-14",
  "4" = "15-19",
  "5" = "20-24",
  "6" = "25-29",
  "7" = "30-34",
  "8" = "35-39",
  "9" = "40-44",
  "10" = "45-49",
  "11" = "50-54",
  "12" = "55-59",
  "13" = "60-64",
  "14" = "65-69",
  "15" = "70-74",
  "16" = "75-79",
  "17" = "80-84",
  "18" = "85+"
)

# Clean and transform the dataset
pop_clean <- pop_raw %>%
  # Keep only the relevant columns
  select(CBSA, NAME, YEAR, AGEGRP, TOT_POP) %>%
  
  # Filter to YEAR codes 1–3 only (corresponding to 2020–2022)
  filter(YEAR %in% 1:3) %>%
  
  # Convert YEAR codes to actual years
  mutate(YEAR = case_when(
    YEAR == 1 ~ 2020,
    YEAR == 2 ~ 2021,
    YEAR == 3 ~ 2022
  )) %>%
  
  # Remove AGEGRP == 0 (total population, not an age group)
  filter(AGEGRP != 0) %>%
  
  # Replace AGEGRP codes with human-readable labels
  mutate(AGE_RANGE = recode(as.character(AGEGRP), !!!age_group_map)) %>%
  
  # Reorder columns for clarity
  select(CBSA, NAME, YEAR, AGE_RANGE, TOT_POP)
```

```{r, fig.width=14, fig.height=8}
library(dplyr)
library(ggplot2)
library(tidyr)
library(scales)

# Step 1: Total population per CBSA, NAME, YEAR (sum across age groups)
pop_summary <- pop_clean %>%
  group_by(CBSA, NAME, YEAR) %>%
  summarise(total_pop = sum(TOT_POP, na.rm = TRUE), .groups = "drop")

# Step 2: Pivot to wide format for 2020 and 2022
pop_wide <- pop_summary %>%
  pivot_wider(names_from = YEAR, values_from = total_pop, names_prefix = "year_")

# Step 3: Calculate percent population growth
growth_rates <- pop_wide %>%
  mutate(
    pop_growth_rate = 100 * (year_2022 - year_2020) / year_2020
  ) %>%
  filter(!is.na(pop_growth_rate))

# Step 4: Get top 10 metros by growth rate
top10 <- growth_rates %>%
  slice_max(order_by = pop_growth_rate, n = 10)

# Step 5: Find Sheridan, WY by exact match
sheridan <- growth_rates %>%
  filter(NAME == "Sheridan, WY")

# Step 6: Combine top 10 and Sheridan, remove duplicates
plot_data <- bind_rows(top10, sheridan) %>%
  distinct(CBSA, .keep_all = TRUE)

# Step 7: Plot
ggplot(plot_data, aes(x = reorder(NAME, pop_growth_rate), y = pop_growth_rate)) +
  geom_col(aes(fill = NAME == "Sheridan, WY")) +
  scale_fill_manual(values = c("TRUE" = "#e31a1c", "FALSE" = "#2c7fb8"), guide = "none") +
  geom_text(aes(label = paste0(round(pop_growth_rate, 1), "%")), hjust = -0.1, size = 3) +
  coord_flip() +
  labs(
    title = "Top 10 Metro Areas by Population Growth Rate (2020–2022)",
    subtitle = "Sheridan, WY included for comparison",
    x = NULL,
    y = "Population Growth Rate (%)"
  ) +
  scale_y_continuous(labels = percent_format(scale = 1), expand = expansion(mult = c(0, 0.1))) +
  theme_minimal() + 
  theme(
    plot.title = element_text(size = 24, face = "bold"),
    plot.subtitle = element_text(size = 20),
    axis.title = element_text(size = 20),
    plot.caption = element_text(size = 20)
  )
```

```{r}
# Step 1: Read in both CSVs and keep only relevant columns
data_2020 <- read_csv("permit-data-2020.csv") %>%
  select(Name, Total) %>%
  rename(TOTAL_2020 = Total)

data_2022 <- read_csv("permit-data-2022.csv") %>%
  select(Name, Total) %>%
  rename(TOTAL_2022 = Total)

# Step 2: Join by NAME
combined <- full_join(data_2020, data_2022, by = "Name")

# Step 3: Calculate percent increase
combined <- combined %>%
  mutate(
    PERINCREASE = round(100 * (TOTAL_2022 - TOTAL_2020) / TOTAL_2020, 1)
  )

# Step 4: Add Sheridan, WY manually
sheridan <- tibble(
  Name = "Sheridan, WY",
  TOTAL_2020 = NA,
  TOTAL_2022 = NA,
  PERINCREASE = 69.6
)

# Step 5: Add to combined table
final_table <- bind_rows(combined, sheridan) %>%
  filter(!is.na(Name))
```

```{r}
final_table <- final_table %>%
  group_by(Name) %>%
  mutate(MEDIAN_PERINCREASE = median(PERINCREASE, na.rm = TRUE)) %>%
  ungroup()
```

```{r, fig.width=14, fig.height=8}
library(dplyr)
library(ggplot2)

# Calculate median PERINCREASE for the entire dataset
median_value <- median(final_table$PERINCREASE, na.rm = TRUE)

# Select top 10 by PERINCREASE
top10 <- final_table %>%
  filter(!is.na(PERINCREASE)) %>%
  slice_max(order_by = PERINCREASE, n = 10) %>%
  select(Name, PERINCREASE)

# Extract Sheridan, WY data (corrected with comma)
sheridan_row <- final_table %>%
  filter(Name == "Sheridan, WY") %>%
  select(Name, PERINCREASE)

# If Sheridan, WY already in top10, give it a second label
sheridan_label <- if ("Sheridan, WY" %in% top10$Name) {
  "Sheridan, WY (duplicate)"
} else {
  "Sheridan, WY"
}

# Rename Sheridan row
sheridan_row$Name <- sheridan_label

# Combine top10, median row, and Sheridan row (no deduping)
combined_data <- top10 %>%
  bind_rows(tibble(Name = "Median", PERINCREASE = median_value)) %>%
  bind_rows(sheridan_row)

# Plot with custom colors
ggplot(combined_data, aes(x = reorder(Name, PERINCREASE), y = PERINCREASE)) +
  geom_col(aes(fill = case_when(
    Name == "Median" ~ "#e31a1c",                   # red for median
    grepl("Sheridan", Name) ~ "#33a02c",            # green for Sheridan
    TRUE ~ "#1f78b4"                                # blue for others
  ))) +
  coord_flip() +
  geom_text(aes(label = paste0(round(PERINCREASE, 1), "%")), 
            hjust = -0.1, size = 3) +
  labs(
    title = "Top 10 Regions by Percent Increase + Median + Sheridan, WY",
    x = NULL,
    y = "Percent Increase",
    fill = NULL
  ) +
  scale_fill_identity() +
  scale_y_continuous(expand = expansion(mult = c(0, 0.15))) +
  theme_minimal() + 
  theme(
    plot.title = element_text(size = 24, face = "bold"),
    plot.subtitle = element_text(size = 20),
    axis.title = element_text(size = 20),
    plot.caption = element_text(size = 20)
  )
```
